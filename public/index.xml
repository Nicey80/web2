<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DataSorcery</title>
    <link>/</link>
    <description>Recent content on DataSorcery</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 07 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>findR - find places of interest in the UK</title>
      <link>/portfolio/2022-12-07-findr/</link>
      <pubDate>Wed, 07 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>/portfolio/2022-12-07-findr/</guid>
      <description>Whether its Chinese in Canterbury or Indian in Iwade - findR has them all
Powered by Yelp Search I&amp;rsquo;ve developed a quick app to allow people to quickly find businesses or places of interest in the UK of their choosing and allowing a filter by rating.
App Details Hosted on my own Shiny Server instance with thanks to the excellent instructions from charlesbordet (https://www.charlesbordet.com/en/guide-shiny-aws/) the app uses the functions within the yelpr (https://github.</description>
    </item>
    
    <item>
      <title>Tidy Tuesday Income Data and plotting themes</title>
      <link>/posts/tt-income-data-and-plotting-themes/</link>
      <pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>/posts/tt-income-data-and-plotting-themes/</guid>
      <description>A while since I&amp;rsquo;ve completed a tidy tuesday challenge here so to get back in the swing of things I&amp;rsquo;ve chosen a fairly simple plot of income equality by race and focused on altering the default these to try to create a more striking visual effect for the data.
Code The code is pretty straight forward to create the chart. The key effect I was going for here was to alter the theme to make a more striking visual.</description>
    </item>
    
    <item>
      <title>Tidy Tuesday Vacination</title>
      <link>/posts/tidy-tuesday-vacination/</link>
      <pubDate>Thu, 27 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/tidy-tuesday-vacination/</guid>
      <description>This weeks Tidy Tuesday gave an opportunity to explore some mapping and a good excuse to look at the patchwork framework to multiplotting. I chose to explore the data from California as a good exercise in creating a chloropleth map using ggplot and the sf package. The latter was extremely useful having spent a significant amnount of time trying to join the data together but by converting the sp data to an sf data frame the flatter structure made joining the data and the subsequent plotting much easier.</description>
    </item>
    
    <item>
      <title>NLP Next Word Prediction</title>
      <link>/portfolio/nlp-next-word-prediction/</link>
      <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/portfolio/nlp-next-word-prediction/</guid>
      <description>NLP Predict the next word.
As the final part of the Coursera R Programming Course I had to build an App that would predict the next word as a user started to type in words so that after min. 3 words the next word is predicted. Similar to the function of some smartphones.
The app can be found here: https://nicey80.shinyapps.io/NLP_App_v2/
The App The App was created primarily using the tidytext package to ingest the corpus data (tweets, blogs and news articles) and create the relevant ngram models and then using dplyr &amp;amp; data.</description>
    </item>
    
    <item>
      <title>Tidy Tuesday NFL data</title>
      <link>/posts/tidy-tuesday-nfl-data/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/tidy-tuesday-nfl-data/</guid>
      <description>Did the best team win the Superbowl?
Armed with the Tidy Tuesday data from NFL seasons back to 2000 I set out to answer the question above. With a rudimentary metric assessing the team strength based on margin of victory and strength of schedule. I created a quick data viz showing that less than third of the time the team ranked top by this metric has won the superbowl
The viz Using the ggimage package to bring a bit of Lombardi glitz to the data viz and a little bit of data wrangling to rank and join the superbowl winners with the top ranked team data gave us this output</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>I&amp;rsquo;m Paul Nice when I&amp;rsquo;m not playing cricket or being a Dance Dad to my 2 amazing daughters I love nothing else that digging into some data to find some interesting nuggets and paint some beautiful dataviz stories. I currently work in the UK telecoms sector using data to answer the questions of what will tomorrow bring and how can we plan for it better. I spend lots of time working with timeseries data, automating data collection routines and crunching data from multiple different data sources.</description>
    </item>
    
    <item>
      <title>Tidy Tuesday Spotify data</title>
      <link>/posts/tt-spotify/</link>
      <pubDate>Sat, 25 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/tt-spotify/</guid>
      <description>This weeks Tidy Tuesday challenge centred around Spotify data, over 32,000 songs from multiple genres from the 60s to today. Given this was my first Tidy Tuesday for a while I decided to go for something relatively quick and simple to try to get back into the habit and look at the popularity of different types of music over time.
Code Having read in the data the next step was to make a quick modification to allow me to work with dates as opposed to character values.</description>
    </item>
    
  </channel>
</rss>
